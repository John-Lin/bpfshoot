name: Build and Push Docker Image

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
    paths:
      - 'Dockerfile'
      - 'Dockerfile.bcc'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'Dockerfile'
      - 'Dockerfile.bcc'

env:
  REGISTRY: docker.io

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
      attestations: write
    
    strategy:
      matrix:
        include:
          - dockerfile: Dockerfile
            image_name: johnlin/bpfshoot
            image_suffix: ""
          - dockerfile: Dockerfile.bcc
            image_name: johnlin/bpfshoot
            image_suffix: "-bcc"
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ matrix.image_name }}
        tags: |
          type=ref,event=branch,suffix=${{ matrix.image_suffix }}
          type=ref,event=pr,suffix=${{ matrix.image_suffix }}
          type=semver,pattern={{version}},suffix=${{ matrix.image_suffix }}
          type=semver,pattern={{major}}.{{minor}},suffix=${{ matrix.image_suffix }}
          type=sha,prefix=sha-,format=short,suffix=${{ matrix.image_suffix }}
          type=raw,value=latest${{ matrix.image_suffix }},enable={{is_default_branch}}

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./${{ matrix.dockerfile }}
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha,scope=${{ matrix.dockerfile }}
        cache-to: type=gha,mode=max,scope=${{ matrix.dockerfile }}

    - name: Generate artifact attestation
      if: github.event_name != 'pull_request'
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ${{ env.REGISTRY }}/${{ matrix.image_name }}
        subject-digest: ${{ steps.build.outputs.digest }}
        push-to-registry: true
